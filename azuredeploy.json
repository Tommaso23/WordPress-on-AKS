{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.1.42791",
      "templateHash": "2017398397007654827"
    }
  },
  "parameters": {
    "workloadName": {
      "type": "string",
      "metadata": {
        "description": "Name of the workload"
      }
    },
    "locationAlias": {
      "type": "string",
      "metadata": {
        "description": "Alias for the location, used to create unique resource names."
      }
    },
    "sqlAdministratorLogin": {
      "type": "string"
    },
    "sqlAdministratorLoginPassword": {
      "type": "securestring"
    }
  },
  "variables": {
    "location": "[deployment().location]",
    "resourceGroupName": "[format('rg-aks-{0}-{1}', parameters('workloadName'), parameters('locationAlias'))]",
    "virtualNetworkName": "[format('vnet-aks-{0}-{1}', parameters('workloadName'), parameters('locationAlias'))]",
    "vnetAddrPrefix": "10.100.0.0/24",
    "aksSubnetName": "snet-clusternodes-aks",
    "aksSubnetAddrPrefix": "10.100.0.0/26",
    "appgatewaySubnetName": "snet-agw-aks",
    "appgatewaySubnetAddrPrefix": "10.100.0.64/26",
    "privateLinkSubnetName": "snet-pep-aks",
    "privateLinkSubnetAddrPrefix": "10.100.0.128/28",
    "netappSubnetName": "snet-netapp-aks",
    "netappSubnetAddrPrefix": "10.100.0.144/28",
    "mysqlPrivateEndpointName": "[format('pe-mysql-{0}-{1}', parameters('workloadName'), parameters('locationAlias'))]",
    "mySqlDnsZoneName": "privatelink.mysql.database.azure.com",
    "sqlServerName": "[format('sql-{0}-{1}', parameters('workloadName'), parameters('locationAlias'))]",
    "databaseName": "[format('db-{0}-{1}', parameters('workloadName'), parameters('locationAlias'))]",
    "sqlVersion": "8.0.21",
    "sqlServerSKU": "Standard_B1ms",
    "aksClusterName": "[format('aks-{0}-{1}', parameters('workloadName'), parameters('locationAlias'))]",
    "kubernetesVersion": "1.31.7",
    "agentPoolSize": "Standard_D4as_v5",
    "userPoolSize": "Standard_D4as_v5",
    "clusterAuthorizedIPRanges": [],
    "nodeResourceGroupName": "[format('MC_rg-aks-itn_{0}_italynorth', variables('aksClusterName'))]",
    "netappAccountName": "[format('netapp-{0}-{1}', parameters('workloadName'), parameters('locationAlias'))]",
    "capacityPoolName": "[format('pool-{0}-{1}', parameters('workloadName'), parameters('locationAlias'))]",
    "volumeName": "[format('vol-{0}-{1}', parameters('workloadName'), parameters('locationAlias'))]",
    "serviceLevel": "Premium",
    "numberOfTB": 1,
    "qosType": "Auto",
    "numberOf50GB": 1,
    "keyVaultPrivateEndpointName": "[format('pe-kv-{0}-{1}', parameters('workloadName'), parameters('locationAlias'))]",
    "keyVaultDnsZoneName": "privatelink.vaultcore.azure.net",
    "keyVaultName": "[format('kv-{0}-{1}-{2}', parameters('workloadName'), uniqueString(subscription().id), parameters('locationAlias'))]",
    "applicationGatewayPublicIpAddressName": "[format('agw-pip-{0}-{1}', parameters('workloadName'), parameters('locationAlias'))]",
    "applicationGatewayName": "[format('agw-{0}-{1}', parameters('workloadName'), parameters('locationAlias'))]",
    "internalLoadBalancerIp": "10.100.0.62",
    "subnets": [
      {
        "subnetAddrPrefix": "[variables('aksSubnetAddrPrefix')]",
        "subnetName": "[variables('aksSubnetName')]",
        "vnetName": "[variables('virtualNetworkName')]",
        "nsgId": "",
        "routeTableId": "",
        "delegation": ""
      },
      {
        "subnetAddrPrefix": "[variables('appgatewaySubnetAddrPrefix')]",
        "subnetName": "[variables('appgatewaySubnetName')]",
        "vnetName": "[variables('virtualNetworkName')]",
        "nsgId": "",
        "routeTableId": "",
        "delegation": ""
      },
      {
        "subnetAddrPrefix": "[variables('privateLinkSubnetAddrPrefix')]",
        "subnetName": "[variables('privateLinkSubnetName')]",
        "vnetName": "[variables('virtualNetworkName')]",
        "nsgId": "",
        "routeTableId": "",
        "delegation": ""
      },
      {
        "subnetAddrPrefix": "[variables('netappSubnetAddrPrefix')]",
        "subnetName": "[variables('netappSubnetName')]",
        "vnetName": "[variables('virtualNetworkName')]",
        "nsgId": "",
        "routeTableId": "",
        "delegation": "Microsoft.NetApp/volumes"
      }
    ]
  },
  "resources": {
    "aksResourceGroup": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "aksResourceGroup",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "rgName": {
            "value": "[variables('resourceGroupName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "8510514467171941033"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "rgName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2025-03-01",
              "name": "[parameters('rgName')]",
              "location": "[parameters('location')]"
            }
          ]
        }
      }
    },
    "aksVirtualnetwork": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "aksVirtualnetwork",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "vnetName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "vnetAddrPrefix": {
            "value": "[variables('vnetAddrPrefix')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "4076115468029314281"
            }
          },
          "parameters": {
            "vnetName": {
              "type": "string"
            },
            "vnetAddrPrefix": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "subnets": {
              "type": "array"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2024-05-01",
              "name": "[parameters('vnetName')]",
              "location": "[parameters('location')]",
              "properties": {
                "copy": [
                  {
                    "name": "subnets",
                    "count": "[length(parameters('subnets'))]",
                    "input": {
                      "name": "[parameters('subnets')[copyIndex('subnets')].subnetName]",
                      "properties": {
                        "addressPrefix": "[parameters('subnets')[copyIndex('subnets')].subnetAddrPrefix]",
                        "networkSecurityGroup": "[if(equals(parameters('subnets')[copyIndex('subnets')].nsgId, ''), null(), createObject('id', parameters('subnets')[copyIndex('subnets')].nsgId))]",
                        "routeTable": "[if(equals(parameters('subnets')[copyIndex('subnets')].routeTableId, ''), null(), createObject('id', parameters('subnets')[copyIndex('subnets')].routeTableId))]",
                        "delegations": "[if(equals(parameters('subnets')[copyIndex('subnets')].delegation, ''), createArray(), createArray(createObject('name', format('{0}-delegation', parameters('subnets')[copyIndex('subnets')].subnetName), 'properties', createObject('serviceName', parameters('subnets')[copyIndex('subnets')].delegation))))]"
                      }
                    }
                  }
                ],
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetAddrPrefix')]"
                  ]
                }
              }
            }
          ],
          "outputs": {
            "vnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            },
            "subnets": {
              "type": "array",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), '2024-05-01').subnets]"
            },
            "aksSubnetId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), '2024-05-01').subnets[0].id]"
            },
            "appGatewaySubnetId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), '2024-05-01').subnets[1].id]"
            },
            "privateLinkSubnetId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), '2024-05-01').subnets[2].id]"
            },
            "netappSubnetId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), '2024-05-01').subnets[3].id]"
            }
          }
        }
      },
      "dependsOn": [
        "aksResourceGroup"
      ]
    },
    "mysql": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "mysql",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "sqlServerName": {
            "value": "[variables('sqlServerName')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "sqlAdministratorLogin": {
            "value": "[parameters('sqlAdministratorLogin')]"
          },
          "sqlAdministratorLoginPassword": {
            "value": "[parameters('sqlAdministratorLoginPassword')]"
          },
          "sqlVersion": {
            "value": "[variables('sqlVersion')]"
          },
          "databaseName": {
            "value": "[variables('databaseName')]"
          },
          "sqlServerSKU": {
            "value": "[variables('sqlServerSKU')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "9257226833745729387"
            }
          },
          "parameters": {
            "sqlServerName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "sqlAdministratorLogin": {
              "type": "string"
            },
            "sqlAdministratorLoginPassword": {
              "type": "securestring"
            },
            "databaseName": {
              "type": "string"
            },
            "sqlVersion": {
              "type": "string"
            },
            "sqlServerSKU": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.DBforMySQL/flexibleServers",
              "apiVersion": "2023-12-30",
              "name": "[parameters('sqlServerName')]",
              "location": "[parameters('location')]",
              "properties": {
                "administratorLogin": "[parameters('sqlAdministratorLogin')]",
                "administratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
                "version": "[parameters('sqlVersion')]",
                "network": {
                  "publicNetworkAccess": "Disabled"
                },
                "storage": {
                  "storageSizeGB": 20,
                  "iops": 360
                }
              },
              "sku": {
                "name": "[parameters('sqlServerSKU')]",
                "tier": "Burstable"
              }
            },
            {
              "type": "Microsoft.DBforMySQL/flexibleServers/databases",
              "apiVersion": "2023-12-30",
              "name": "[format('{0}/{1}', parameters('sqlServerName'), parameters('databaseName'))]",
              "properties": {
                "collation": "utf8mb3_general_ci"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/flexibleServers', parameters('sqlServerName'))]"
              ]
            },
            {
              "type": "Microsoft.DBforMySQL/flexibleServers/firewallRules",
              "apiVersion": "2023-12-30",
              "name": "[format('{0}/{1}', parameters('sqlServerName'), 'AllowAzureIPs')]",
              "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/flexibleServers/databases', parameters('sqlServerName'), parameters('databaseName'))]",
                "[resourceId('Microsoft.DBforMySQL/flexibleServers', parameters('sqlServerName'))]"
              ]
            },
            {
              "type": "Microsoft.DBforMySQL/flexibleServers/configurations",
              "apiVersion": "2023-06-30",
              "name": "[format('{0}/{1}', parameters('sqlServerName'), 'require_secure_transport')]",
              "properties": {
                "value": "OFF",
                "source": "user-override"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforMySQL/flexibleServers', parameters('sqlServerName'))]"
              ]
            }
          ],
          "outputs": {
            "sqlServerId": {
              "type": "string",
              "value": "[resourceId('Microsoft.DBforMySQL/flexibleServers', parameters('sqlServerName'))]"
            },
            "connectionString": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.DBforMySQL/flexibleServers', parameters('sqlServerName')), '2023-12-30').fullyQualifiedDomainName]"
            }
          }
        }
      },
      "dependsOn": [
        "aksResourceGroup"
      ]
    },
    "mySqlPrivateDnsZone": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "mySqlPrivateDnsZone",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "dnsZoneName": {
            "value": "[variables('mySqlDnsZoneName')]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "virtualNetworkId": {
            "value": "[reference('aksVirtualnetwork').outputs.vnetId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "3047665738206839646"
            }
          },
          "parameters": {
            "dnsZoneName": {
              "type": "string"
            },
            "virtualNetworkName": {
              "type": "string"
            },
            "virtualNetworkId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2024-06-01",
              "name": "[parameters('dnsZoneName')]",
              "location": "global",
              "properties": {}
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2024-06-01",
              "name": "[format('{0}/{1}', parameters('dnsZoneName'), format('vlink-{0}', parameters('virtualNetworkName')))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('virtualNetworkId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
              ]
            }
          ],
          "outputs": {
            "dnsZoneId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "aksResourceGroup",
        "aksVirtualnetwork"
      ]
    },
    "mySQLPrivateEndpoint": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "mySQLPrivateEndpoint",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "privateEndpointName": {
            "value": "[variables('mysqlPrivateEndpointName')]"
          },
          "subnetPrivateEndpointId": {
            "value": "[reference('aksVirtualnetwork').outputs.privateLinkSubnetId.value]"
          },
          "linkedResourceId": {
            "value": "[reference('mysql').outputs.sqlServerId.value]"
          },
          "serviceName": {
            "value": "mysqlServer"
          },
          "privateDnsZoneId": {
            "value": "[reference('mySqlPrivateDnsZone').outputs.dnsZoneId.value]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "5965447070968227322"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "privateEndpointName": {
              "type": "string"
            },
            "subnetPrivateEndpointId": {
              "type": "string"
            },
            "linkedResourceId": {
              "type": "string"
            },
            "serviceName": {
              "type": "string"
            },
            "privateDnsZoneId": {
              "type": "string"
            },
            "virtualNetworkName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2024-05-01",
              "name": "[parameters('privateEndpointName')]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('subnetPrivateEndpointId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[parameters('privateEndpointName')]",
                    "properties": {
                      "privateLinkServiceId": "[parameters('linkedResourceId')]",
                      "groupIds": [
                        "[parameters('serviceName')]"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2024-05-01",
              "name": "[format('{0}/{1}', parameters('privateEndpointName'), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "[format('privatelink.{0}.azure.com', parameters('serviceName'))]",
                    "properties": {
                      "privateDnsZoneId": "[parameters('privateDnsZoneId')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpointName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "aksResourceGroup",
        "aksVirtualnetwork",
        "mySqlPrivateDnsZone",
        "mysql"
      ]
    },
    "aksCluster": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "aksCluster",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "clusterName": {
            "value": "[variables('aksClusterName')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "kubernetesVersion": {
            "value": "[variables('kubernetesVersion')]"
          },
          "agentPoolSize": {
            "value": "[variables('agentPoolSize')]"
          },
          "userPoolSize": {
            "value": "[variables('userPoolSize')]"
          },
          "aksVirtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "subnetId": {
            "value": "[reference('aksVirtualnetwork').outputs.aksSubnetId.value]"
          },
          "clusterAuthorizedIPRanges": {
            "value": "[variables('clusterAuthorizedIPRanges')]"
          },
          "nodeResourceGroupName": {
            "value": "[variables('nodeResourceGroupName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "12556831139909450374"
            }
          },
          "parameters": {
            "clusterName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "kubernetesVersion": {
              "type": "string"
            },
            "agentPoolSize": {
              "type": "string"
            },
            "aksVirtualNetworkName": {
              "type": "string"
            },
            "subnetId": {
              "type": "string"
            },
            "nodeResourceGroupName": {
              "type": "string"
            },
            "userPoolSize": {
              "type": "string"
            },
            "clusterAuthorizedIPRanges": {
              "type": "array"
            },
            "roleDefinitionId": {
              "type": "string",
              "defaultValue": "4d97b98b-1d4f-4787-a291-c67834d212e7"
            }
          },
          "resources": [
            {
              "type": "Microsoft.ContainerService/managedClusters",
              "apiVersion": "2025-02-01",
              "name": "[parameters('clusterName')]",
              "location": "[parameters('location')]",
              "properties": {
                "kubernetesVersion": "[parameters('kubernetesVersion')]",
                "dnsPrefix": "[format('{0}-dns', parameters('clusterName'))]",
                "agentPoolProfiles": [
                  {
                    "name": "agentpool",
                    "count": 2,
                    "vmSize": "[parameters('agentPoolSize')]",
                    "osDiskSizeGB": 80,
                    "osDiskType": "Managed",
                    "osType": "Linux",
                    "osSKU": "Ubuntu",
                    "minCount": 2,
                    "maxCount": 4,
                    "kubeletDiskType": "OS",
                    "vnetSubnetID": "[parameters('subnetId')]",
                    "enableAutoScaling": true,
                    "enableFIPS": false,
                    "enableEncryptionAtHost": false,
                    "type": "VirtualMachineScaleSets",
                    "mode": "System",
                    "scaleSetPriority": "Regular",
                    "scaleSetEvictionPolicy": "Delete",
                    "orchestratorVersion": "[parameters('kubernetesVersion')]",
                    "enableNodePublicIP": false,
                    "maxPods": 50,
                    "availabilityZones": [
                      "1",
                      "2",
                      "3"
                    ],
                    "upgradeSettings": {
                      "maxSurge": "33%"
                    },
                    "nodeTaints": [
                      "CriticalAddonsOnly=true:NoSchedule"
                    ]
                  },
                  {
                    "name": "userpool",
                    "count": 2,
                    "vmSize": "[parameters('userPoolSize')]",
                    "osDiskSizeGB": 128,
                    "osDiskType": "Managed",
                    "osType": "Linux",
                    "osSKU": "Ubuntu",
                    "kubeletDiskType": "OS",
                    "minCount": 2,
                    "maxCount": 4,
                    "vnetSubnetID": "[parameters('subnetId')]",
                    "enableAutoScaling": true,
                    "enableFIPS": false,
                    "enableEncryptionAtHost": false,
                    "type": "VirtualMachineScaleSets",
                    "mode": "User",
                    "scaleSetPriority": "Regular",
                    "scaleSetEvictionPolicy": "Delete",
                    "orchestratorVersion": "[parameters('kubernetesVersion')]",
                    "enableNodePublicIP": false,
                    "maxPods": 30,
                    "availabilityZones": [
                      "1",
                      "2",
                      "3"
                    ],
                    "upgradeSettings": {
                      "maxSurge": "33%"
                    }
                  }
                ],
                "servicePrincipalProfile": {
                  "clientId": "msi"
                },
                "addonProfiles": {
                  "azureKeyvaultSecretsProvider": {
                    "enabled": true
                  },
                  "azurepolicy": {
                    "enabled": true
                  }
                },
                "nodeResourceGroup": "[parameters('nodeResourceGroupName')]",
                "enableRBAC": true,
                "enablePodSecurityPolicy": false,
                "networkProfile": {
                  "networkPlugin": "azure",
                  "networkPluginMode": "overlay",
                  "podCidr": "192.168.0.0/16",
                  "networkPolicy": "none",
                  "loadBalancerSku": "Standard",
                  "loadBalancerProfile": null,
                  "serviceCidr": "172.16.0.0/16",
                  "dnsServiceIP": "172.16.0.10",
                  "outboundType": "loadBalancer"
                },
                "autoScalerProfile": {
                  "balance-similar-node-groups": "false",
                  "expander": "random",
                  "max-empty-bulk-delete": "10",
                  "max-graceful-termination-sec": "600",
                  "max-node-provision-time": "15m",
                  "max-total-unready-percentage": "45",
                  "new-pod-scale-up-delay": "0s",
                  "ok-total-unready-count": "3",
                  "scale-down-delay-after-add": "10m",
                  "scale-down-delay-after-delete": "10s",
                  "scale-down-delay-after-failure": "3m",
                  "scale-down-unneeded-time": "10m",
                  "scale-down-unready-time": "20m",
                  "scale-down-utilization-threshold": "0.5",
                  "scan-interval": "10s",
                  "skip-nodes-with-local-storage": "false",
                  "skip-nodes-with-system-pods": "true"
                },
                "apiServerAccessProfile": {
                  "authorizedIPRanges": "[parameters('clusterAuthorizedIPRanges')]",
                  "enablePrivateCluster": false
                },
                "autoUpgradeProfile": {
                  "upgradeChannel": "patch",
                  "nodeOSUpgradeChannel": "NodeImage"
                },
                "azureMonitorProfile": {
                  "metrics": {
                    "enabled": true,
                    "kubeStateMetrics": {}
                  }
                },
                "storageProfile": {
                  "blobCSIDriver": {
                    "enabled": false
                  },
                  "diskCSIDriver": {
                    "enabled": false
                  },
                  "fileCSIDriver": {
                    "enabled": false
                  },
                  "snapshotController": {
                    "enabled": false
                  }
                },
                "disableLocalAccounts": false,
                "securityProfile": {
                  "workloadIdentity": {
                    "enabled": true
                  },
                  "imageCleaner": {
                    "enabled": true,
                    "intervalHours": 168
                  }
                },
                "oidcIssuerProfile": {
                  "enabled": true
                },
                "ingressProfile": {
                  "webAppRouting": {
                    "enabled": true,
                    "nginx": {
                      "defaultIngressControllerType": "None"
                    }
                  }
                },
                "metricsProfile": {
                  "costAnalysis": {
                    "enabled": false
                  }
                }
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "sku": {
                "name": "Base",
                "tier": "Standard"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Network/virtualNetworks/{0}', parameters('aksVirtualNetworkName'))]",
              "name": "[guid(parameters('roleDefinitionId'), resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]",
                "principalId": "[reference(resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName')), '2025-02-01', 'full').identity.principalId]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "aksVirtualnetwork"
      ]
    },
    "netapp": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "netapp",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "netappAccountName": {
            "value": "[variables('netappAccountName')]"
          },
          "capacityPoolName": {
            "value": "[variables('capacityPoolName')]"
          },
          "volumeName": {
            "value": "[variables('volumeName')]"
          },
          "serviceLevel": {
            "value": "[variables('serviceLevel')]"
          },
          "numberOfTB": {
            "value": "[variables('numberOfTB')]"
          },
          "qosType": {
            "value": "[variables('qosType')]"
          },
          "numberOf50GB": {
            "value": "[variables('numberOf50GB')]"
          },
          "netappSubnetId": {
            "value": "[reference('aksVirtualnetwork').outputs.netappSubnetId.value]"
          },
          "aksSubnetAddrPrefix": {
            "value": "[variables('aksSubnetAddrPrefix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "1672994356497726903"
            }
          },
          "parameters": {
            "netappAccountName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "capacityPoolName": {
              "type": "string"
            },
            "serviceLevel": {
              "type": "string"
            },
            "numberOfTB": {
              "type": "int"
            },
            "qosType": {
              "type": "string"
            },
            "volumeName": {
              "type": "string"
            },
            "netappSubnetId": {
              "type": "string"
            },
            "numberOf50GB": {
              "type": "int"
            },
            "aksSubnetAddrPrefix": {
              "type": "string"
            }
          },
          "variables": {
            "capacityPoolSize": "[mul(json('1099511627776'), parameters('numberOfTB'))]",
            "volumeSize": "[mul(json('53687091200'), parameters('numberOf50GB'))]"
          },
          "resources": [
            {
              "type": "Microsoft.NetApp/netAppAccounts",
              "apiVersion": "2025-01-01",
              "name": "[parameters('netappAccountName')]",
              "location": "[parameters('location')]",
              "properties": {
                "encryption": {
                  "keySource": "Microsoft.NetApp"
                }
              }
            },
            {
              "type": "Microsoft.NetApp/netAppAccounts/capacityPools",
              "apiVersion": "2025-01-01",
              "name": "[format('{0}/{1}', parameters('netappAccountName'), parameters('capacityPoolName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "serviceLevel": "[parameters('serviceLevel')]",
                "size": "[variables('capacityPoolSize')]",
                "qosType": "[parameters('qosType')]",
                "encryptionType": "Single",
                "coolAccess": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.NetApp/netAppAccounts', parameters('netappAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes",
              "apiVersion": "2025-01-01",
              "name": "[format('{0}/{1}/{2}', parameters('netappAccountName'), parameters('capacityPoolName'), parameters('volumeName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "serviceLevel": "[parameters('serviceLevel')]",
                "creationToken": "[parameters('volumeName')]",
                "usageThreshold": "[variables('volumeSize')]",
                "exportPolicy": {
                  "rules": [
                    {
                      "ruleIndex": 1,
                      "unixReadOnly": false,
                      "unixReadWrite": true,
                      "cifs": false,
                      "nfsv3": true,
                      "nfsv41": false,
                      "allowedClients": "[parameters('aksSubnetAddrPrefix')]",
                      "kerberos5ReadOnly": false,
                      "kerberos5ReadWrite": false,
                      "kerberos5iReadOnly": false,
                      "kerberos5iReadWrite": false,
                      "kerberos5pReadOnly": false,
                      "kerberos5pReadWrite": false,
                      "hasRootAccess": true,
                      "chownMode": "Unrestricted"
                    }
                  ]
                },
                "protocolTypes": [
                  "NFSv3"
                ],
                "subnetId": "[parameters('netappSubnetId')]",
                "networkFeatures": "Standard",
                "snapshotDirectoryVisible": true,
                "kerberosEnabled": false,
                "securityStyle": "Unix",
                "smbEncryption": false,
                "smbContinuouslyAvailable": false,
                "encryptionKeySource": "Microsoft.NetApp",
                "ldapEnabled": false,
                "unixPermissions": "0775",
                "coolAccess": false,
                "avsDataStore": "Disabled",
                "isDefaultQuotaEnabled": false,
                "defaultUserQuotaInKiBs": 0,
                "defaultGroupQuotaInKiBs": 0,
                "enableSubvolumes": "Disabled",
                "smbNonBrowsable": "Disabled",
                "smbAccessBasedEnumeration": "Disabled",
                "deleteBaseSnapshot": false,
                "isLargeVolume": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.NetApp/netAppAccounts/capacityPools', parameters('netappAccountName'), parameters('capacityPoolName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "aksResourceGroup",
        "aksVirtualnetwork"
      ]
    },
    "appGatewayPublicIpAddress": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "appGatewayPublicIpAddress",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "publicIpAddressName": {
            "value": "[variables('applicationGatewayPublicIpAddressName')]"
          },
          "location": {
            "value": "[variables('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "12675429179594246047"
            }
          },
          "parameters": {
            "publicIpAddressName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2024-05-01",
              "name": "[parameters('publicIpAddressName')]",
              "location": "[parameters('location')]",
              "properties": {
                "publicIPAllocationMethod": "Static"
              },
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "zones": [
                "1",
                "2",
                "3"
              ]
            }
          ],
          "outputs": {
            "publicIpAddressId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpAddressName'))]"
            },
            "publicIpAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpAddressName')), '2024-05-01').ipAddress]"
            }
          }
        }
      },
      "dependsOn": [
        "aksResourceGroup"
      ]
    },
    "applicationGateway": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "applicationGateway",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "applicationGatewayName": {
            "value": "[variables('applicationGatewayName')]"
          },
          "applicationGatewaySubnetId": {
            "value": "[reference('aksVirtualnetwork').outputs.appGatewaySubnetId.value]"
          },
          "appGatewayPublicIpAddressId": {
            "value": "[reference('appGatewayPublicIpAddress').outputs.publicIpAddressId.value]"
          },
          "internalLoadBalancerIp": {
            "value": "[variables('internalLoadBalancerIp')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "18414898197963798841"
            }
          },
          "parameters": {
            "applicationGatewayName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "applicationGatewaySubnetId": {
              "type": "string"
            },
            "appGatewayPublicIpAddressId": {
              "type": "string"
            },
            "internalLoadBalancerIp": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/applicationGateways",
              "apiVersion": "2024-05-01",
              "name": "[parameters('applicationGatewayName')]",
              "location": "[parameters('location')]",
              "zones": [
                "1",
                "2",
                "3"
              ],
              "properties": {
                "sku": {
                  "name": "Standard_v2",
                  "tier": "Standard_v2",
                  "family": "Generation_1"
                },
                "gatewayIPConfigurations": [
                  {
                    "name": "appGatewayIpConfig",
                    "properties": {
                      "subnet": {
                        "id": "[parameters('applicationGatewaySubnetId')]"
                      }
                    }
                  }
                ],
                "frontendIPConfigurations": [
                  {
                    "name": "appGwPublicFrontendIpIPv4",
                    "properties": {
                      "publicIPAddress": {
                        "id": "[parameters('appGatewayPublicIpAddressId')]"
                      }
                    }
                  }
                ],
                "frontendPorts": [
                  {
                    "name": "port_80",
                    "properties": {
                      "port": 80
                    }
                  }
                ],
                "autoscaleConfiguration": {
                  "minCapacity": 0,
                  "maxCapacity": 10
                },
                "enableHttp2": true,
                "backendAddressPools": [
                  {
                    "name": "be-loadBalancerIp",
                    "properties": {
                      "backendAddresses": [
                        {
                          "ipAddress": "[parameters('internalLoadBalancerIp')]"
                        }
                      ]
                    }
                  }
                ],
                "backendHttpSettingsCollection": [
                  {
                    "name": "aks-ingress-bpool-http",
                    "properties": {
                      "port": 80,
                      "protocol": "Http",
                      "cookieBasedAffinity": "Disabled",
                      "pickHostNameFromBackendAddress": false,
                      "requestTimeout": 20,
                      "probe": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/probes', parameters('applicationGatewayName'), 'probe-aks-internal-lb')]"
                      }
                    }
                  }
                ],
                "httpListeners": [
                  {
                    "name": "listener-http",
                    "properties": {
                      "frontendIPConfiguration": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', parameters('applicationGatewayName'), 'appGwPublicFrontendIpIPv4')]"
                      },
                      "frontendPort": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', parameters('applicationGatewayName'), 'port_80')]"
                      },
                      "protocol": "Http",
                      "requireServerNameIndication": false
                    }
                  }
                ],
                "listeners": [],
                "urlPathMaps": [],
                "requestRoutingRules": [
                  {
                    "name": "apw-routing-rule",
                    "properties": {
                      "ruleType": "Basic",
                      "priority": 100,
                      "httpListener": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', parameters('applicationGatewayName'), 'listener-http')]"
                      },
                      "backendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', parameters('applicationGatewayName'), 'be-loadBalancerIp')]"
                      },
                      "backendHttpSettings": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', parameters('applicationGatewayName'), 'aks-ingress-bpool-http')]"
                      }
                    }
                  }
                ],
                "probes": [
                  {
                    "name": "probe-aks-internal-lb",
                    "properties": {
                      "protocol": "Http",
                      "path": "/healthz",
                      "host": "10.100.0.62",
                      "interval": 30,
                      "timeout": 30,
                      "unhealthyThreshold": 3,
                      "pickHostNameFromBackendHttpSettings": false,
                      "minServers": 0,
                      "match": {}
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      "dependsOn": [
        "aksResourceGroup",
        "aksVirtualnetwork",
        "appGatewayPublicIpAddress"
      ]
    },
    "keyVaultPrivateEndpoint": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "keyVaultPrivateEndpoint",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "privateEndpointName": {
            "value": "[variables('keyVaultPrivateEndpointName')]"
          },
          "subnetPrivateEndpointId": {
            "value": "[reference('aksVirtualnetwork').outputs.privateLinkSubnetId.value]"
          },
          "linkedResourceId": {
            "value": "[reference('keyVault').outputs.keyVaultId.value]"
          },
          "serviceName": {
            "value": "vault"
          },
          "privateDnsZoneId": {
            "value": "[reference('keyVaultPrivateDnsZone').outputs.dnsZoneId.value]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "5965447070968227322"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "privateEndpointName": {
              "type": "string"
            },
            "subnetPrivateEndpointId": {
              "type": "string"
            },
            "linkedResourceId": {
              "type": "string"
            },
            "serviceName": {
              "type": "string"
            },
            "privateDnsZoneId": {
              "type": "string"
            },
            "virtualNetworkName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2024-05-01",
              "name": "[parameters('privateEndpointName')]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('subnetPrivateEndpointId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[parameters('privateEndpointName')]",
                    "properties": {
                      "privateLinkServiceId": "[parameters('linkedResourceId')]",
                      "groupIds": [
                        "[parameters('serviceName')]"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2024-05-01",
              "name": "[format('{0}/{1}', parameters('privateEndpointName'), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "[format('privatelink.{0}.azure.com', parameters('serviceName'))]",
                    "properties": {
                      "privateDnsZoneId": "[parameters('privateDnsZoneId')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpointName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "aksResourceGroup",
        "aksVirtualnetwork",
        "keyVault",
        "keyVaultPrivateDnsZone"
      ]
    },
    "keyVaultPrivateDnsZone": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "KeyVaultPrivateDnsZone",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "dnsZoneName": {
            "value": "[variables('keyVaultDnsZoneName')]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "virtualNetworkId": {
            "value": "[reference('aksVirtualnetwork').outputs.vnetId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "3047665738206839646"
            }
          },
          "parameters": {
            "dnsZoneName": {
              "type": "string"
            },
            "virtualNetworkName": {
              "type": "string"
            },
            "virtualNetworkId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2024-06-01",
              "name": "[parameters('dnsZoneName')]",
              "location": "global",
              "properties": {}
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2024-06-01",
              "name": "[format('{0}/{1}', parameters('dnsZoneName'), format('vlink-{0}', parameters('virtualNetworkName')))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('virtualNetworkId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
              ]
            }
          ],
          "outputs": {
            "dnsZoneId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "aksResourceGroup",
        "aksVirtualnetwork"
      ]
    },
    "keyVault": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "keyVault",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "mySqlConnectionString": {
            "value": "[reference('mysql').outputs.connectionString.value]"
          },
          "mySqlUser": {
            "value": "[parameters('sqlAdministratorLogin')]"
          },
          "mySqlPassword": {
            "value": "[parameters('sqlAdministratorLoginPassword')]"
          },
          "mySqlDBName": {
            "value": "[variables('databaseName')]"
          },
          "aksClusterName": {
            "value": "[variables('aksClusterName')]"
          },
          "nodeResourceGroupName": {
            "value": "[variables('nodeResourceGroupName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "6337112388542602861"
            }
          },
          "parameters": {
            "keyVaultName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "mySqlConnectionString": {
              "type": "string"
            },
            "mySqlUser": {
              "type": "string"
            },
            "mySqlPassword": {
              "type": "securestring"
            },
            "mySqlDBName": {
              "type": "string"
            },
            "aksClusterName": {
              "type": "string"
            },
            "nodeResourceGroupName": {
              "type": "string"
            },
            "roleDefinitionId": {
              "type": "string",
              "defaultValue": "4633458b-17de-408a-b874-0445c86b69e6"
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2024-12-01-preview",
              "name": "[parameters('keyVaultName')]",
              "location": "[parameters('location')]",
              "properties": {
                "accessPolicies": [],
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "tenantId": "[subscription().tenantId]",
                "networkAcls": {
                  "bypass": "None",
                  "defaultAction": "Deny",
                  "ipRules": [],
                  "virtualNetworkRules": []
                },
                "enableRbacAuthorization": true,
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 7,
                "createMode": "default",
                "publicNetworkAccess": "Disabled"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2024-12-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'mysql-database-host')]",
              "properties": {
                "value": "[parameters('mySqlConnectionString')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2024-12-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'mysql-database-user')]",
              "properties": {
                "value": "[parameters('mySqlUser')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2024-12-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'mysql-database-password')]",
              "properties": {
                "value": "[parameters('mySqlPassword')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2024-12-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'mysql-database-name')]",
              "properties": {
                "value": "[parameters('mySqlDBName')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
              "name": "[guid(parameters('roleDefinitionId'), resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]",
                "principalId": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('nodeResourceGroupName')), 'Microsoft.ManagedIdentity/userAssignedIdentities', format('azurekeyvaultsecretsprovider-{0}', parameters('aksClusterName'))), '2025-01-31-preview').principalId]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            }
          ],
          "outputs": {
            "keyVaultId": {
              "type": "string",
              "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "aksResourceGroup",
        "keyVaultPrivateDnsZone",
        "mysql"
      ]
    }
  }
}